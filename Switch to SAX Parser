
import org.xml.sax.*;
import org.xml.sax.helpers.*;
import org.json.JSONObject;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class SAXXMLReader extends DefaultHandler {

    private List<String> fields;
    private JSONObject json;
    private boolean isField;

    public SAXXMLReader(List<String> fields) {
        this.fields = fields;
        this.json = new JSONObject();
        this.isField = false;
    }

    public JSONObject getJson() {
        return json;
    }

    @Override
    public void startElement(String uri, String localName, String qName, Attributes attributes) {
        if (fields.contains(qName)) {
            isField = true;
        }
    }

    @Override
    public void characters(char[] ch, int start, int length) {
        if (isField) {
            String value = new String(ch, start, length).trim();
            if (!value.isEmpty()) {
                json.put(qName, value);
            }
            isField = false;
        }
    }

    @Override
    public void endElement(String uri, String localName, String qName) {
        // Reset flag
    }

    public static void main(String[] args) {
        try {
            Scanner scanner = new Scanner(System.in);
            System.out.print("Enter the fields you want to display (comma-separated): ");
            String input = scanner.nextLine();
            String[] fieldsArray = input.split(",");
            List<String> fields = new ArrayList<>();
            for (String field : fieldsArray) {
                fields.add(field.trim());
            }

            File inputFile = new File("input.xml");
            if (!inputFile.exists()) {
                System.out.println("The file 'input.xml' does not exist.");
                return;
            }

            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser saxParser = factory.newSAXParser();
            SAXXMLReader handler = new SAXXMLReader(fields);
            saxParser.parse(inputFile, handler);

            System.out.println(handler.getJson().toString(4)); // Pretty print with indentation
        } catch (Exception e) {
            System.out.println("An error occurred: " + e.getMessage());
        }
    }
}
